{"version":3,"sources":["rxjs/store.tsx","components/Search/Search.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rawPokermon$","BehaviorSubject","pokemonWithPower$","pipe","map","pokemon","p","power","attack","defense","hp","special_attack","special_defense","speed","selected$","pokemon$","combineLatestWith","selected","includes","id","deck$","filter","fetch","then","res","json","data","next","Search","props","useState","searchString","className","type","defaultValue","onChange","e","returnFnc","target","value","Deck","deck","useObservableState","console","log","name","Main","setSearchstring","setPokemon","useEffect","filteredPokemonReq","sub","subscribe","unsubscribe","filteredPokemon","useMemo","toLocaleLowerCase","style","display","gridTemplateColumns","textAlign","checked","pid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4fd83af.chunk.js","sourcesContent":["import { BehaviorSubject  ,combineLatestWith,map } from \"rxjs\";\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  type: string[];\n  hp: number;\n  attack: number;\n  defense: number;\n  special_attack: number;\n  special_defense: number;\n  speed: number;\n  power?:number;\n  selected?:boolean;\n}\nexport const rawPokermon$ = new BehaviorSubject<Pokemon[]>([]);\n\nexport const pokemonWithPower$ = rawPokermon$.pipe(\n  map(pokemon=> \n      pokemon.map(p=>(\n        {\n          ...p,\n          power: p.attack+p.defense+p.hp+p.special_attack+p.special_defense+p.speed\n        }\n      ))\n    )\n)\n\nexport const selected$ = new BehaviorSubject<number[]>([]);\n\nexport const pokemon$ = pokemonWithPower$.pipe(\n  combineLatestWith(selected$),\n  map(([pokemon, selected])=> \n      pokemon.map(p=>(\n        {\n          ...p,\n          selected: selected.includes(p.id)\n        }\n      ))\n    )\n)\nexport const deck$ = pokemon$.pipe(\n  map(pokemon=> \n      pokemon.filter(p=> p.selected)\n    )\n)\nfetch('/pokemon-simplified.json')\n.then(res=>res.json())\n.then(data=>rawPokermon$.next(data))\n","import React, { useState , SetStateAction, Dispatch} from 'react';\nimport './Search.css';\ninterface iSearchSting {\n  searchString: string;\n  returnFnc : any;\n}\n\n\n\nconst Search =  (  props : iSearchSting)  =>{\n  const [searchString, setSearchstring] = useState(props.searchString);\n return (\n    <div className=\"Search\" data-testid=\"Search\">\n    \n      <input type=\"text\"\n      defaultValue={searchString}\n      onChange={e=> props.returnFnc(e.target.value) }></input>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./Main.css\";\nimport Search from \"../Search/Search\";\nimport { pokemon$, Pokemon, selected$ ,deck$} from \"../../rxjs/store\";\nimport { useObservableState } from 'observable-hooks'\n\nconst Deck =()=>{\n  const deck =useObservableState(deck$)\n  console.log('deck1',deck$);\n  console.log('deck2',deck);\n  \n return (\n   <div>\n       <h4>Deck</h4>\n  {deck && deck.map((p : Pokemon) => {\n    return(\n        <div key={p.name}>\n            <label className=\"container\">\n              <strong> {p.name}</strong> - {p.power}\n            </label>\n        </div>\n      )\n    ;\n  })}\n   </div>\n  )\n\n}\n\nconst Main = () => {\n  const [searchString, setSearchstring] = useState(\"ba\");\n  const [pokemon, setPokemon] = useState<Pokemon[]>([]);\n\n  function primera(): void {\n    console.log(\"consola\");\n  }\n\n  useEffect(() => {\n    filteredPokemonReq();\n  }, []);\n\n   const filteredPokemonReq = () => {\n    const sub = pokemon$.subscribe(setPokemon);\n    return () => sub.unsubscribe();\n  };\n  const toggleDisplay = (id: any) => {\n    console.log(\"clicking\", id);\n    if (selected$.value.includes(id)) {\n      selected$.next(selected$.value.filter((pid) => pid != id));\n    } else {\n      selected$.next([...selected$.value, id]);\n    }\n\n    console.log(\"selected\", selected$);\n  };\n\n  const filteredPokemon = useMemo(() => {\n    return pokemon.filter((p) =>\n      p.name.toLocaleLowerCase().includes(searchString.toLocaleLowerCase())\n    );\n  }, [pokemon, searchString]);\n  return (\n    <div className=\"Main\" data-testid=\"Main\">\n      Main Component\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          textAlign: \"left\",\n        }}\n      >\n        <Search\n          searchString={searchString}\n          returnFnc={setSearchstring}\n        ></Search>\n        <br />\n\n    \n      </div>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          textAlign: \"left\",\n        }}\n      >\n          <div id=\"divDisplay\" className=\"divDisplay\">\n          {filteredPokemon.map((p) => {\n            return (\n              <div key={p.name}>\n                <label className=\"container\">\n                  <strong> {p.name}</strong> - {p.power}\n                  <input\n                    type=\"checkbox\"\n                    checked={selected$.value.includes(p.id)}\n                    onChange={(e) => toggleDisplay(p.id)}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              </div>\n            );\n          })}\n        </div>\n     <Deck/>\n      </div>\n      \n   \n\n    </div>\n  );\n};\n\nexport default Main;\n","import React , {useEffect, useState}from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button  from \"./components/Button/Button\";\nimport { pokemonWithPower$ } from \"./rxjs/store\";\nimport Main  from \"./components/Main/Main\";\n\nfunction App() {\n  useEffect(() => {\n    pokemonWithPower$.subscribe(console.log)\n  }, [])\n\n  function primera():void {\n   console.log('consola')\n  }\n  function segunda():void {\n    alert('alerta')\n   }\n  return (\n    <div className=\"App\">\n\n<Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}